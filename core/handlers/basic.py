from datetime import datetime
from aiogram.types import Message, FSInputFile
from core.parser.async_wrapper_pic_parser import async_wrapper_parser
from core.settings import settings
from core.database.function_schedules import insert_schedule, delete_schedule, \
    get_all_time_data
from core.database.function_users import insert_data_in_table, get_data_from_user_id, get_all_subscribed_users, \
    update_subscribe_status
from core.utils.check_day_wednesday import today_is_wednesday
from core.utils.photo_zhabka import get_random_image, delete_file
from core.utils.reboot_bot import restart_script


# –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_start(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ—Ç.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    id_user = message.from_user.id
    first_name = message.from_user.first_name
    if await insert_data_in_table(user_id=id_user, username=first_name, subscribe=False):
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {first_name}!\n–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è?\n'
                             f'–ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –±–æ–ª—å—à–µ –≤–≤–µ–¥–∏ /help')
    else:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {first_name}!\n–î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å!\n'
                             f'–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —Ç—É—Ç –∏ –∫–∞–∫.')


async def get_help(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    help_text = """
    üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Å –∂–∞–±–∫–∞–º–∏!

    –ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º –±–æ—Ç–æ–º:
    1. –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∫–∞—Ä—Ç–∏–Ω–æ–∫ —Å –∂–∞–±–∞–º–∏:
       - –í–≤–µ–¥–∏—Ç–µ <code>/subscribe 1</code> –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏.
       - –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—É—é —Å—Ä–µ–¥—É.

    2. –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:
       - –í–≤–µ–¥–∏—Ç–µ <code>/subscribe 0</code> –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏.

    3. –ü–æ–ª—É—á–∏—Ç—å —Å–º–µ—à–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∂–∞–±–æ–π:
       - –í–≤–µ–¥–∏—Ç–µ /get_zhabka –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å (–Ω–æ —Å–ø–µ—Ä–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∞)!

    –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã—Ö –∂–∞–±–æ–∫ üê∏
    """
    await message.answer(help_text)



async def get_zhabka(message: Message) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∂–∞–±—ã (–∫—Ä–æ–º–µ —Å—Ä–µ–¥—ã) –ø–æ –∫–æ–º–∞–Ω–¥–µ /get_zhabka, –µ—Å–ª–∏ –æ–Ω –ø–æ–¥–ø–∏—Å–∞–Ω.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    id_user = message.from_user.id
    result_data = await get_data_from_user_id(id_user)
    if result_data['subscribe']:
        path_to_zhabka = get_random_image('wednesday')
        if path_to_zhabka == "":
            await message.answer(f'–ñ–∞–±–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É –º–∏–Ω—É—Ç, —è –∏—Ö –ø–æ–π–º–∞—é.\n–ß–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É.')
            await async_wrapper_parser() # –ü–∞—Ä—Å–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
        elif today_is_wednesday() and path_to_zhabka != '':
            image_from_pc = FSInputFile(path_to_zhabka)
            await message.answer_photo(
                image_from_pc
            )
            delete_file(path_to_zhabka)
        else:
            path_to_zhabka = get_random_image('no_wednesday')
            image_from_pc = FSInputFile(path_to_zhabka)
            await message.answer_photo(
                image_from_pc
            )
            await message.answer(f'! –°–µ–≥–æ–¥–Ω—è –Ω–µ —Å—Ä–µ–¥–∞ !\n! –ë—É–¥—å  –±–¥–∏—Ç–µ–ª—å–Ω–µ–π !')
    else:
        await message.answer(f'–î–ª—è —á–µ–≥–æ –≤–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å –∂–∞–±–æ–π, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã?\n'
                             f'–í—Å–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ - /help')


async def change_subscribe(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–∞ /subscribe 1 –∏–ª–∏ /subscribe 0
    /subscribe 1 - –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
    /subscribe 0 - –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    split_message = message.text.split()
    if 3 > len(split_message) > 1:
        id_user = message.from_user.id
        chat_id = message.chat.id
        new_subscribe_status = split_message[-1] == '1'
        result_updates = await update_subscribe_status(user_id=id_user, new_subscribe_status=new_subscribe_status)
        if result_updates and new_subscribe_status:
            scheduled_time = datetime(2023, 12, 15, 12, 0, 0).time()
            await insert_schedule(chat_id=chat_id, user_id=id_user, scheduled_time=scheduled_time)
            await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –µ–∂–µ—Å—Ä–µ–¥–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É')
        elif result_updates and not new_subscribe_status:
            result_unsubscribe = await delete_schedule(chat_id=chat_id, user_id=id_user)
            if result_unsubscribe:
                await message.answer('–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –µ–∂–µ—Å—Ä–µ–¥–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏')
            else:
                await message.answer('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
        else:
            await message.answer('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
    else:
        await message.answer('–í—ã –Ω–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É.\n'
                             '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–∞ <code>/subscribe 1</code> –∏–ª–∏ <code>/subscribe 0</code>')




# –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
async def get_subscribe_command(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã /subs.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    if message.from_user.id == settings.bots.id_admin:
        response_sub_users = "! –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π !"
        result_sub_users = await get_all_subscribed_users()
        if result_sub_users:
            response_sub_users = ''
            for i_string in result_sub_users:
                response_sub_users += f'''=====================================
User_id: <code>{i_string['user_id']}</code>
Username: <code>{i_string['username']}</code>
Subscribe: {i_string['subscribe']}
=====================================\n
'''
        await message.answer(response_sub_users)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


async def get_update_pictures(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã /updpic.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    if message.from_user.id == settings.bots.id_admin:
        await message.answer("! –ê–ø–¥–µ–π—Ç –∫–∞—Ä—Ç–∏–Ω–æ–∫ - –û–∂–∏–¥–∞–π—Ç–µ !")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


async def get_subscribe_time_command(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã /time.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type message: Message
    """
    if message.from_user.id == settings.bots.id_admin:
        response_sub_times = "! –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏! "
        result_sub_times = await get_all_time_data()
        if result_sub_times:
            response_sub_times = ''
            for i_string in result_sub_times:
                response_sub_times += f'''=====================================
Chat_id: <code>{i_string['chat_id']}</code>
User_id: <code>{i_string['user_id']}</code>
–í—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏: {i_string['scheduled_time'].strftime('%H:%M')}
=====================================\n
'''
        await message.answer(response_sub_times)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


async def restart_bot(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã /restart

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.
    :type message: Message
    """
    if message.chat.id == settings.bots.id_admin:
        await message.answer("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
